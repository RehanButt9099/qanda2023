[{"/Users/Rehan/Desktop/Frontends/frontend/src/index.tsx":"1","/Users/Rehan/Desktop/Frontends/frontend/src/reportWebVitals.ts":"2","/Users/Rehan/Desktop/Frontends/frontend/src/App.tsx":"3","/Users/Rehan/Desktop/Frontends/frontend/src/Styles.ts":"4","/Users/Rehan/Desktop/Frontends/frontend/src/Store.ts":"5","/Users/Rehan/Desktop/Frontends/frontend/src/Header.tsx":"6","/Users/Rehan/Desktop/Frontends/frontend/src/HomePage.tsx":"7","/Users/Rehan/Desktop/Frontends/frontend/src/SignInPage.tsx":"8","/Users/Rehan/Desktop/Frontends/frontend/src/SearchPage.tsx":"9","/Users/Rehan/Desktop/Frontends/frontend/src/NotFoundPage.tsx":"10","/Users/Rehan/Desktop/Frontends/frontend/src/QuestionPage.tsx":"11","/Users/Rehan/Desktop/Frontends/frontend/src/SignOutPage.tsx":"12","/Users/Rehan/Desktop/Frontends/frontend/src/AuthorizedPage.tsx":"13","/Users/Rehan/Desktop/Frontends/frontend/src/AskPage.tsx":"14","/Users/Rehan/Desktop/Frontends/frontend/src/QuestionsData.ts":"15","/Users/Rehan/Desktop/Frontends/frontend/src/Icons.tsx":"16","/Users/Rehan/Desktop/Frontends/frontend/src/Page.tsx":"17","/Users/Rehan/Desktop/Frontends/frontend/src/QuestionList.tsx":"18","/Users/Rehan/Desktop/Frontends/frontend/src/PageTitle.tsx":"19","/Users/Rehan/Desktop/Frontends/frontend/src/AnswerList.tsx":"20","/Users/Rehan/Desktop/Frontends/frontend/src/http.ts":"21","/Users/Rehan/Desktop/Frontends/frontend/src/Auth.tsx":"22","/Users/Rehan/Desktop/Frontends/frontend/src/Question.tsx":"23","/Users/Rehan/Desktop/Frontends/frontend/src/Answer.tsx":"24","/Users/Rehan/Desktop/Frontends/frontend/src/AppSettings.ts":"25"},{"size":556,"mtime":1690355804000,"results":"26","hashOfConfig":"27"},{"size":425,"mtime":1690355804000,"results":"28","hashOfConfig":"27"},{"size":2881,"mtime":1690884961751,"results":"29","hashOfConfig":"27"},{"size":2246,"mtime":1690821363255,"results":"30","hashOfConfig":"27"},{"size":2976,"mtime":1690355804000,"results":"31","hashOfConfig":"27"},{"size":3044,"mtime":1691407912444,"results":"32","hashOfConfig":"27"},{"size":1922,"mtime":1690993915478,"results":"33","hashOfConfig":"27"},{"size":600,"mtime":1690872221783,"results":"34","hashOfConfig":"27"},{"size":1360,"mtime":1690898604738,"results":"35","hashOfConfig":"27"},{"size":136,"mtime":1690355804000,"results":"36","hashOfConfig":"27"},{"size":4765,"mtime":1690898444150,"results":"37","hashOfConfig":"27"},{"size":736,"mtime":1690893525057,"results":"38","hashOfConfig":"27"},{"size":481,"mtime":1690893576527,"results":"39","hashOfConfig":"27"},{"size":2721,"mtime":1691470909903,"results":"40","hashOfConfig":"27"},{"size":3952,"mtime":1690984672758,"results":"41","hashOfConfig":"27"},{"size":290,"mtime":1690355804000,"results":"42","hashOfConfig":"27"},{"size":456,"mtime":1690355804000,"results":"43","hashOfConfig":"27"},{"size":1030,"mtime":1690992496462,"results":"44","hashOfConfig":"27"},{"size":397,"mtime":1690355804000,"results":"45","hashOfConfig":"27"},{"size":622,"mtime":1690355804000,"results":"46","hashOfConfig":"27"},{"size":1304,"mtime":1690893522163,"results":"47","hashOfConfig":"27"},{"size":2443,"mtime":1691044537844,"results":"48","hashOfConfig":"27"},{"size":1335,"mtime":1690355804000,"results":"49","hashOfConfig":"27"},{"size":726,"mtime":1690355804000,"results":"50","hashOfConfig":"27"},{"size":550,"mtime":1691407686460,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"7k8hx1",{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"57","messages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"61","messages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"77","usedDeprecatedRules":"54"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"80","messages":"81","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"82","messages":"83","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/Rehan/Desktop/Frontends/frontend/src/index.tsx",[],["107","108"],"/Users/Rehan/Desktop/Frontends/frontend/src/reportWebVitals.ts",[],"/Users/Rehan/Desktop/Frontends/frontend/src/App.tsx",[],"/Users/Rehan/Desktop/Frontends/frontend/src/Styles.ts",[],"/Users/Rehan/Desktop/Frontends/frontend/src/Store.ts",[],"/Users/Rehan/Desktop/Frontends/frontend/src/Header.tsx",[],"/Users/Rehan/Desktop/Frontends/frontend/src/HomePage.tsx",["109","110","111","112","113"],"/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport React from 'react';\nimport { QuestionList } from './QuestionList';\nimport { getUnansweredQuestions, QuestionData } from './QuestionsData';\nimport { Page } from './Page';\nimport { PageTitle } from './PageTitle';\nimport { PrimaryButton } from './Styles';\nimport { useNavigate } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  gettingUnansweredQuestionsAction,\n  gotUnansweredQuestionsAction,\n  AppState,\n} from './Store';\n//import { useAuth } from './Auth';\nimport { useAuth0 } from '@auth0/auth0-react';\n\nexport const HomePage = () => {\n  const [questions, setQuestions] = React.useState<QuestionData[]>([]);\n  const [questionsLoading, setQuestionsLoading] = React.useState(true);\n\n  const { isAuthenticated } = useAuth0();\n  React.useEffect(() => {\n    let cancelled = false;\n    const doGetUnansweredQuestions = async () => {\n      const unansweredQuestions = await getUnansweredQuestions();\n      if (!cancelled) {\n        setQuestions(unansweredQuestions);\n        setQuestionsLoading(false);\n      }\n    };\n    doGetUnansweredQuestions();\n    return () => {\n      cancelled = true;\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const navigate = useNavigate();\n  const handleAskQuestionClick = () => {\n    navigate('ask');\n  };\n\n  return (\n    <Page>\n      <div\n        css={css`\n          display: flex;\n          align-items: center;\n          justify-content: space-between;\n        `}\n      >\n        <PageTitle>Unanswered Questions</PageTitle>\n        {isAuthenticated && (\n          <PrimaryButton onClick={handleAskQuestionClick}>\n            Ask a question\n          </PrimaryButton>\n        )}\n      </div>\n      {questionsLoading ? (\n        <div>Loading...</div>\n      ) : (\n        <QuestionList data={questions} />\n      )}\n    </Page>\n  );\n};\n","/Users/Rehan/Desktop/Frontends/frontend/src/SignInPage.tsx",[],"/Users/Rehan/Desktop/Frontends/frontend/src/SearchPage.tsx",["114","115","116","117","118"],"/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useSearchParams } from 'react-router-dom';\nimport { QuestionList } from './QuestionList';\nimport { QuestionData, searchQuestions } from './QuestionsData';\n\nimport React from 'react';\nimport { Page } from './Page';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  AppState,\n  searchingQuestionsAction,\n  searchedQuestionsAction,\n} from './Store';\n\nexport const SearchPage = () => {\n  const [searchParams] = useSearchParams();\n  const [questions, setQuestions] = React.useState<QuestionData[]>([]);\n\n  const search = searchParams.get('criteria') || '';\n\n  React.useEffect(() => {\n    let cancelled = false;\n    const doSearch = async (criteria: string) => {\n      const foundResults = await searchQuestions(criteria);\n      if (!cancelled) {\n        setQuestions(foundResults);\n      }\n    };\n    doSearch(search);\n    return () => {\n      cancelled = true;\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [search]);\n\n  return (\n    <Page title=\"Search Results\">\n      {search && (\n        <p\n          css={css`\n            font-size: 16px;\n            font-style: italic;\n            margin-top: 0px;\n          `}\n        >\n          for \"{search}\"\n        </p>\n      )}\n      <QuestionList data={questions} />\n    </Page>\n  );\n};\n","/Users/Rehan/Desktop/Frontends/frontend/src/NotFoundPage.tsx",[],"/Users/Rehan/Desktop/Frontends/frontend/src/QuestionPage.tsx",["119","120","121","122","123"],"/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport {\n  gray3,\n  gray6,\n  Fieldset,\n  FieldContainer,\n  FieldLabel,\n  FieldTextArea,\n  FormButtonContainer,\n  PrimaryButton,\n  FieldError,\n  SubmissionSuccess,\n} from './Styles';\n\nimport React from 'react';\nimport { Page } from './Page';\nimport { useParams } from 'react-router-dom';\nimport { getQuestion, postAnswer, QuestionData } from './QuestionsData';\nimport { AnswerList } from './AnswerList';\n\nimport { useForm } from 'react-hook-form';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { AppState, gettingQuestionAction, gotQuestionAction } from './Store';\n//import { useAuth } from './Auth';\nimport { useAuth0 } from '@auth0/auth0-react';\n\ntype FormData = {\n  content: string;\n};\n\nexport const QuestionPage = () => {\n  const [successfullySubmitted, setSuccessfullySubmitted] =\n    React.useState(false);\n\n  const [question, setQuestion] = React.useState<QuestionData | null>(null);\n\n  const { questionId } = useParams();\n\n  React.useEffect(() => {\n    let cancelled = false;\n    const doGetQuestion = async (questionId: number) => {\n      const foundQuestion = await getQuestion(questionId);\n      if (!cancelled) {\n        setQuestion(foundQuestion);\n      }\n    };\n    if (questionId) {\n      doGetQuestion(Number(questionId));\n    }\n    return () => {\n      cancelled = true;\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [questionId]);\n\n  const {\n    register,\n    formState: { errors },\n    handleSubmit,\n    formState,\n  } = useForm<FormData>({\n    mode: 'onBlur',\n  });\n\n  const submitForm = async (data: FormData) => {\n    const result = await postAnswer({\n      questionId: question!.questionId,\n      content: data.content,\n      userName: 'Fred',\n      created: new Date(),\n    });\n    setSuccessfullySubmitted(result ? true : false);\n  };\n  const { isAuthenticated } = useAuth0();\n  return (\n    <Page>\n      <div\n        css={css`\n          background-color: white;\n          padding: 15px 20px 20px 20px;\n          border-radius: 4px;\n          border: 1px solid ${gray6};\n          box-shadow: 0 3px 5px 0 rgba(0, 0, 0, 0.16);\n        `}\n      >\n        <div\n          css={css`\n            font-size: 19px;\n            font-weight: bold;\n            margin: 10px 0px 5px;\n          `}\n        >\n          {question === null ? '' : question.title}\n        </div>\n        {question !== null && (\n          <React.Fragment>\n            <p\n              css={css`\n                margin-top: 0px;\n                background-color: white;\n              `}\n            >\n              {question.content}\n            </p>\n            <div\n              css={css`\n                font-size: 12px;\n                font-style: italic;\n                color: ${gray3};\n              `}\n            >\n              {`Asked by ${question.userName} on\n  ${question.created.toLocaleDateString()} \n  ${question.created.toLocaleTimeString()}`}\n            </div>\n            <AnswerList data={question.answers} />\n            {isAuthenticated && (\n              <form\n                onSubmit={handleSubmit(submitForm)}\n                css={css`\n                  margin-top: 20px;\n                `}\n              >\n                <Fieldset\n                  disabled={formState.isSubmitting || successfullySubmitted}\n                >\n                  <FieldContainer>\n                    <FieldLabel htmlFor=\"content\">Your Answer</FieldLabel>\n                    <FieldTextArea\n                      {...register('content', {\n                        required: true,\n                        minLength: 50,\n                      })}\n                      id=\"content\"\n                      name=\"content\"\n                    />\n                    {errors.content && errors.content.type === 'required' && (\n                      <FieldError>You must enter the answer</FieldError>\n                    )}\n                    {errors.content && errors.content.type === 'minLength' && (\n                      <FieldError>\n                        The answer must be at least 50 characters\n                      </FieldError>\n                    )}\n                  </FieldContainer>\n                  <FormButtonContainer>\n                    <PrimaryButton type=\"submit\">\n                      Submit Your Answer\n                    </PrimaryButton>\n                  </FormButtonContainer>\n                  {successfullySubmitted && (\n                    <SubmissionSuccess>\n                      Your answer was successfully submitted\n                    </SubmissionSuccess>\n                  )}\n                </Fieldset>\n              </form>\n            )}\n          </React.Fragment>\n        )}\n      </div>\n    </Page>\n  );\n};\n","/Users/Rehan/Desktop/Frontends/frontend/src/SignOutPage.tsx",[],"/Users/Rehan/Desktop/Frontends/frontend/src/AuthorizedPage.tsx",[],"/Users/Rehan/Desktop/Frontends/frontend/src/AskPage.tsx",[],"/Users/Rehan/Desktop/Frontends/frontend/src/QuestionsData.ts",["124","125"],"import { http } from './http';\nimport { getAccessToken } from './Auth';\nexport interface QuestionData {\n  questionId: number;\n  title: string;\n  content: string;\n  userName: string;\n  created: Date;\n  answers: AnswerData[];\n}\n\nexport interface QuestionDataFromServer {\n  questionId: number;\n  title: string;\n  content: string;\n  userName: string;\n  created: string;\n  answers: Array<{\n    answerId: number;\n    content: string;\n    userName: string;\n    created: string;\n  }>;\n}\n\nexport interface AnswerData {\n  answerId: number;\n  content: string;\n  userName: string;\n  created: Date;\n}\n\nexport const mapQuestionFromServer = (\n  question: QuestionDataFromServer,\n): QuestionData => ({\n  ...question,\n  created: new Date(question.created),\n  answers: question.answers\n    ? question.answers.map((answer) => ({\n        ...answer,\n        created: new Date(answer.created),\n      }))\n    : [],\n});\n\nconst questions: QuestionData[] = [\n  {\n    questionId: 1,\n    title: 'Why should I learn TypeScript?',\n    content:\n      'TypeScript seems to be getting popular so I wondered whether it is worth my time learning it? What benefits does it give over JavaScript?',\n    userName: 'Bob',\n    created: new Date(),\n    answers: [\n      {\n        answerId: 1,\n        content: 'To catch problems earlier speeding up your developments',\n        userName: 'Jane',\n        created: new Date(),\n      },\n      {\n        answerId: 2,\n        content:\n          'So, that you can use the JavaScript features of tomorrow, today',\n        userName: 'Fred',\n        created: new Date(),\n      },\n    ],\n  },\n  {\n    questionId: 2,\n    title: 'Which state management tool should I use?',\n    content:\n      'There seem to be a fair few state management tools around for React - React, Unstated, ... Which one should I use?',\n    userName: 'Bob',\n    created: new Date(),\n    answers: [],\n  },\n];\n\nexport const getUnansweredQuestions = async (): Promise<QuestionData[]> => {\n  const result = await http<QuestionDataFromServer[]>({\n    path: '/questions/unanswered',\n  });\n  if (result.ok && result.body) {\n    return result.body.map(mapQuestionFromServer);\n  } else {\n    return [];\n  }\n};\n\nconst wait = async (ms: number): Promise<void> => {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n};\n\nexport const getQuestion = async (\n  questionId: number,\n): Promise<QuestionData | null> => {\n  const result = await http<QuestionDataFromServer>({\n    path: `/questions/${questionId}`,\n  });\n  if (result.ok && result.body) {\n    return mapQuestionFromServer(result.body);\n  } else {\n    return null;\n  }\n};\n\nexport const searchQuestions = async (\n  criteria: string,\n): Promise<QuestionData[]> => {\n  const result = await http<QuestionDataFromServer[]>({\n    path: `/questions?search=${criteria}`,\n  });\n  if (result.ok && result.body) {\n    return result.body.map(mapQuestionFromServer);\n  } else {\n    return [];\n  }\n};\n\nexport interface PostQuestionData {\n  title: string;\n  content: string;\n  userName: string;\n  created: Date;\n}\n\nexport const postQuestion = async (\n  question: PostQuestionData,\n): Promise<QuestionData | undefined> => {\n  const accessToken = await getAccessToken();\n  const result = await http<QuestionDataFromServer, PostQuestionData>({\n    path: '/questions',\n    method: 'post',\n    body: question,\n    accessToken,\n  });\n  if (result.ok && result.body) {\n    return mapQuestionFromServer(result.body);\n  } else {\n    return undefined;\n  }\n};\n\nexport interface PostAnswerData {\n  questionId: number;\n  content: string;\n  userName: string;\n  created: Date;\n}\n\nexport const postAnswer = async (\n  answer: PostAnswerData,\n): Promise<AnswerData | undefined> => {\n  const accessToken = await getAccessToken();\n  const result = await http<AnswerData, PostAnswerData>({\n    path: '/questions/answer',\n    method: 'post',\n    body: answer,\n    accessToken,\n  });\n  if (result.ok) {\n    return result.body;\n  } else {\n    return undefined;\n  }\n};\n","/Users/Rehan/Desktop/Frontends/frontend/src/Icons.tsx",[],"/Users/Rehan/Desktop/Frontends/frontend/src/Page.tsx",[],"/Users/Rehan/Desktop/Frontends/frontend/src/QuestionList.tsx",[],"/Users/Rehan/Desktop/Frontends/frontend/src/PageTitle.tsx",[],"/Users/Rehan/Desktop/Frontends/frontend/src/AnswerList.tsx",[],"/Users/Rehan/Desktop/Frontends/frontend/src/http.ts",[],"/Users/Rehan/Desktop/Frontends/frontend/src/Auth.tsx",[],"/Users/Rehan/Desktop/Frontends/frontend/src/Question.tsx",[],"/Users/Rehan/Desktop/Frontends/frontend/src/Answer.tsx",[],"/Users/Rehan/Desktop/Frontends/frontend/src/AppSettings.ts",[],{"ruleId":"126","replacedBy":"127"},{"ruleId":"128","replacedBy":"129"},{"ruleId":"130","severity":1,"message":"131","line":10,"column":10,"nodeType":"132","messageId":"133","endLine":10,"endColumn":21},{"ruleId":"130","severity":1,"message":"134","line":10,"column":23,"nodeType":"132","messageId":"133","endLine":10,"endColumn":34},{"ruleId":"130","severity":1,"message":"135","line":12,"column":3,"nodeType":"132","messageId":"133","endLine":12,"endColumn":35},{"ruleId":"130","severity":1,"message":"136","line":13,"column":3,"nodeType":"132","messageId":"133","endLine":13,"endColumn":31},{"ruleId":"130","severity":1,"message":"137","line":14,"column":3,"nodeType":"132","messageId":"133","endLine":14,"endColumn":11},{"ruleId":"130","severity":1,"message":"131","line":10,"column":10,"nodeType":"132","messageId":"133","endLine":10,"endColumn":21},{"ruleId":"130","severity":1,"message":"134","line":10,"column":23,"nodeType":"132","messageId":"133","endLine":10,"endColumn":34},{"ruleId":"130","severity":1,"message":"137","line":12,"column":3,"nodeType":"132","messageId":"133","endLine":12,"endColumn":11},{"ruleId":"130","severity":1,"message":"138","line":13,"column":3,"nodeType":"132","messageId":"133","endLine":13,"endColumn":27},{"ruleId":"130","severity":1,"message":"139","line":14,"column":3,"nodeType":"132","messageId":"133","endLine":14,"endColumn":26},{"ruleId":"130","severity":1,"message":"131","line":24,"column":10,"nodeType":"132","messageId":"133","endLine":24,"endColumn":21},{"ruleId":"130","severity":1,"message":"134","line":24,"column":23,"nodeType":"132","messageId":"133","endLine":24,"endColumn":34},{"ruleId":"130","severity":1,"message":"137","line":25,"column":10,"nodeType":"132","messageId":"133","endLine":25,"endColumn":18},{"ruleId":"130","severity":1,"message":"140","line":25,"column":20,"nodeType":"132","messageId":"133","endLine":25,"endColumn":41},{"ruleId":"130","severity":1,"message":"141","line":25,"column":43,"nodeType":"132","messageId":"133","endLine":25,"endColumn":60},{"ruleId":"130","severity":1,"message":"142","line":46,"column":7,"nodeType":"132","messageId":"133","endLine":46,"endColumn":32},{"ruleId":"130","severity":1,"message":"143","line":92,"column":7,"nodeType":"132","messageId":"133","endLine":92,"endColumn":11},"no-native-reassign",["144"],"no-negated-in-lhs",["145"],"@typescript-eslint/no-unused-vars","'useSelector' is defined but never used.","Identifier","unusedVar","'useDispatch' is defined but never used.","'gettingUnansweredQuestionsAction' is defined but never used.","'gotUnansweredQuestionsAction' is defined but never used.","'AppState' is defined but never used.","'searchingQuestionsAction' is defined but never used.","'searchedQuestionsAction' is defined but never used.","'gettingQuestionAction' is defined but never used.","'gotQuestionAction' is defined but never used.","'questions' is assigned a value but never used.","'wait' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]