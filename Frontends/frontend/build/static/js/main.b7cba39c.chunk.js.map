{"version":3,"sources":["Page.tsx","AppSettings.ts","http.ts","Auth.tsx","QuestionsData.ts","PageTitle.tsx","user.svg","Icons.tsx","Header.tsx","Question.tsx","QuestionList.tsx","HomePage.tsx","SearchPage.tsx","SignInPage.tsx","NotFoundPage.tsx","Answer.tsx","AnswerList.tsx","QuestionPage.tsx","Store.ts","SignOutPage.tsx","AuthorizedPage.tsx","App.tsx","reportWebVitals.ts","index.tsx","Styles.ts"],"names":["Page","_ref","title","children","_jsxs","css","_templateObject","_taggedTemplateLiteral","_jsx","PageTitle","webAPIUrl","concat","authSettings","domain","clientId","redirectUri","window","location","origin","scope","audience","http","_asyncToGenerator","_regeneratorRuntime","mark","_callee","config","request","response","body","wrap","_context","prev","next","Request","path","method","headers","JSON","stringify","undefined","accessToken","set","fetch","sent","ok","json","abrupt","logError","stop","_x","apply","arguments","_ref2","_callee2","contentType","_context2","get","indexOf","text","console","error","url","_x2","_x3","getAccessToken","auth0FromHook","createAuth0Client","getTokenSilently","mapQuestionFromServer","question","_objectSpread","created","Date","answers","map","answer","getUnansweredQuestions","result","getQuestion","_ref3","_callee3","questionId","_context3","searchQuestions","_ref4","_callee4","criteria","_context4","postQuestion","_ref5","_callee5","_context5","_x4","postAnswer","_ref6","_callee6","_context6","_x5","UserIcon","src","user","alt","width","buttonStyle","fontFamily","fontSize","gray2","gray5","Header","_useAuth","useAuth0","isAuthenticated","isLoading","navigate","useNavigate","_useForm","useForm","register","handleSubmit","_useSearchParams","useSearchParams","_slicedToArray","_templateObject2","Link","to","_templateObject3","gray1","_templateObject4","process","onSubmit","search","name","type","placeholder","defaultValue","_templateObject5","Question","data","showContent","content","length","substring","gray3","userName","toLocaleDateString","toLocaleTimeString","defaultProps","QuestionList","renderItem","accent2","HomePage","_React$useState","React","useState","_React$useState2","questions","setQuestions","_React$useState3","_React$useState4","questionsLoading","setQuestionsLoading","useEffect","cancelled","doGetUnansweredQuestions","unansweredQuestions","PrimaryButton","onClick","SearchPage","searchParams","doSearch","foundResults","SignInPage","action","loginWithRedirect","StatusText","NotFoundPage","Answer","AnswerList","answerId","QuestionPage","successfullySubmitted","setSuccessfullySubmitted","setQuestion","useParams","doGetQuestion","foundQuestion","Number","mode","errors","formState","submitForm","gray6","Fragment","Fieldset","disabled","isSubmitting","FieldContainer","FieldLabel","htmlFor","FieldTextArea","required","minLength","id","FieldError","FormButtonContainer","SubmissionSuccess","initialQuestionState","loading","unanswered","viewing","searched","GETTINGUNANSWEREDQUESTIONS","GOTUNANSWEREDQUESTIONS","GETTINGQUESTION","GOTQUESTION","SEARCHINGQUESTIONS","SEARCHEDQUESTIONS","rootReducer","combineReducers","state","SignOutPage","logout","message","AuthorizedPage","_Fragment","AskPage","lazy","store","createStore","App","Provider","Auth0Provider","authorizationParams","redirect_uri","BrowserRouter","Routes","Route","element","Suspense","fallback","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","primary2","styled","button","fieldset","div","label","baseFieldCSS","FieldInput","input","_templateObject6","textarea","_templateObject7","_templateObject8","_templateObject9","_templateObject10","_templateObject11","_templateObject12"],"mappings":"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","file":"static/js/main.b7cba39c.chunk.js","sourcesContent":["/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport React from 'react';\nimport { PageTitle } from './PageTitle';\ninterface Props {\n  title?: string;\n  children: React.ReactNode;\n}\nexport const Page = ({ title, children }: Props) => (\n  <div\n    css={css`\n      margin: 50px auto 20px auto;\n      padding: 30px 20px;\n      max-width: 600px;\n    `}\n  >\n    {title && <PageTitle>{title}</PageTitle>}\n    {children}\n  </div>\n);\n","export const server =\n  process.env.REACT_APP_ENV === 'production'\n    ? 'https://your-backend.azurewebsites.net'\n    : process.env.REACT_APP_ENV === 'staging'\n    ? 'https://your-backend-staging.azurewebsites.net'\n    : 'https://localhost:7037';\n\nexport const webAPIUrl = `${server}/api`;\n\nexport const authSettings = {\n  domain: 'dev-mgx2m336d2n3g45f.us.auth0.com',\n  clientId: 'xD9Y1eGs4A52gZnVGsik2ZHUkawycoO6',\n  redirectUri: window.location.origin + '/signin-callback',\n  scope: 'openid profile QandAAPI email',\n  audience: 'https://qanda',\n};\n","import { webAPIUrl } from './AppSettings';\nexport interface HttpRequest<REQB> {\n  path: string;\n  method?: string;\n  body?: REQB;\n  accessToken?: string;\n}\nexport interface HttpResponse<RESB> {\n  ok: boolean;\n  body?: RESB;\n}\nexport const http = async <RESB, REQB = undefined>(\n  config: HttpRequest<REQB>,\n): Promise<HttpResponse<RESB>> => {\n  const request = new Request(`${webAPIUrl}${config.path}`, {\n    method: config.method || 'get',\n    headers: {\n      'Content-Type': 'application/json',\n    },\n    body: config.body ? JSON.stringify(config.body) : undefined,\n  });\n  if (config.accessToken) {\n    request.headers.set('authorization', `bearer ${config.accessToken}`);\n  }\n  const response = await fetch(request);\n  if (response.ok) {\n    const body = await response.json();\n    return { ok: response.ok, body };\n  } else {\n    logError(request, response);\n    return { ok: response.ok };\n  }\n};\nconst logError = async (request: Request, response: Response) => {\n  const contentType = response.headers.get('content-type');\n  let body: any;\n  if (contentType && contentType.indexOf('application/json') !== -1) {\n    body = await response.json();\n  } else {\n    body = await response.text();\n  }\n  console.error(\n    `Error requesting ${request.method}\n         ${request.url}`,\n    body,\n  );\n};\n","import React from 'react';\nimport { createAuth0Client } from '@auth0/auth0-spa-js';\nimport { Auth0Client } from '@auth0/auth0-spa-js/dist/typings/Auth0Client';\nimport { authSettings } from './AppSettings';\n\ninterface Auth0User {\n  name?: string;\n  email?: string;\n}\ninterface IAuth0Context {\n  isAuthenticated: boolean;\n  user?: Auth0User;\n  signIn: () => void;\n  signOut: () => void;\n  loading: boolean;\n}\nexport const Auth0Context = React.createContext<IAuth0Context>({\n  isAuthenticated: false,\n  signIn: () => {},\n  signOut: () => {},\n  loading: true,\n});\nexport const useAuth = () => React.useContext(Auth0Context);\n\nexport const AuthProvider: React.FC = (children) => {\n  const [isAuthenticated, setIsAuthenticated] = React.useState<boolean>(false);\n  const [user, setUser] = React.useState<Auth0User | undefined>(undefined);\n  const [auth0Client, setAuth0Client] = React.useState<Auth0Client>();\n  const [loading, setLoading] = React.useState<boolean>(true);\n  const getAuth0ClientFromState = () => {\n    if (auth0Client === undefined) {\n      throw new Error('Auth0 client not set');\n    }\n    return auth0Client;\n  };\n  React.useEffect(() => {\n    const initAuth0 = async () => {\n      setLoading(true);\n      const auth0FromHook = await createAuth0Client(authSettings);\n      setAuth0Client(auth0FromHook);\n      if (\n        window.location.pathname === '/signin-callback' &&\n        window.location.search.indexOf('code=') > -1\n      ) {\n        await auth0FromHook.handleRedirectCallback();\n        window.location.replace(window.location.origin);\n      }\n      const isAuthenticatedFromHook = await auth0FromHook.isAuthenticated();\n      if (isAuthenticatedFromHook) {\n        const user = await auth0FromHook.getUser();\n        setUser(user);\n      }\n      setIsAuthenticated(isAuthenticatedFromHook);\n      setLoading(false);\n    };\n    initAuth0();\n  }, []);\n  return (\n    <Auth0Context.Provider\n      value={{\n        isAuthenticated,\n        user,\n        signIn: () => getAuth0ClientFromState().loginWithRedirect(),\n        signOut: () =>\n          getAuth0ClientFromState().logout({\n            clientId: authSettings.clientId,\n          }),\n        loading,\n      }}\n    >\n      children\n    </Auth0Context.Provider>\n  );\n};\n\nexport const getAccessToken = async () => {\n  const auth0FromHook = await createAuth0Client(authSettings);\n  const accessToken = await auth0FromHook.getTokenSilently();\n  return accessToken;\n};\n","import { http } from './http';\nimport { getAccessToken } from './Auth';\nexport interface QuestionData {\n  questionId: number;\n  title: string;\n  content: string;\n  userName: string;\n  created: Date;\n  answers: AnswerData[];\n}\n\nexport interface QuestionDataFromServer {\n  questionId: number;\n  title: string;\n  content: string;\n  userName: string;\n  created: string;\n  answers: Array<{\n    answerId: number;\n    content: string;\n    userName: string;\n    created: string;\n  }>;\n}\n\nexport interface AnswerData {\n  answerId: number;\n  content: string;\n  userName: string;\n  created: Date;\n}\n\nexport const mapQuestionFromServer = (\n  question: QuestionDataFromServer,\n): QuestionData => ({\n  ...question,\n  created: new Date(question.created),\n  answers: question.answers\n    ? question.answers.map((answer) => ({\n        ...answer,\n        created: new Date(answer.created),\n      }))\n    : [],\n});\n\nconst questions: QuestionData[] = [\n  {\n    questionId: 1,\n    title: 'Why should I learn TypeScript?',\n    content:\n      'TypeScript seems to be getting popular so I wondered whether it is worth my time learning it? What benefits does it give over JavaScript?',\n    userName: 'Bob',\n    created: new Date(),\n    answers: [\n      {\n        answerId: 1,\n        content: 'To catch problems earlier speeding up your developments',\n        userName: 'Jane',\n        created: new Date(),\n      },\n      {\n        answerId: 2,\n        content:\n          'So, that you can use the JavaScript features of tomorrow, today',\n        userName: 'Fred',\n        created: new Date(),\n      },\n    ],\n  },\n  {\n    questionId: 2,\n    title: 'Which state management tool should I use?',\n    content:\n      'There seem to be a fair few state management tools around for React - React, Unstated, ... Which one should I use?',\n    userName: 'Bob',\n    created: new Date(),\n    answers: [],\n  },\n];\n\nexport const getUnansweredQuestions = async (): Promise<QuestionData[]> => {\n  const result = await http<QuestionDataFromServer[]>({\n    path: '/questions/unanswered',\n  });\n  if (result.ok && result.body) {\n    return result.body.map(mapQuestionFromServer);\n  } else {\n    return [];\n  }\n};\n\nconst wait = async (ms: number): Promise<void> => {\n  return new Promise((resolve) => setTimeout(resolve, ms));\n};\n\nexport const getQuestion = async (\n  questionId: number,\n): Promise<QuestionData | null> => {\n  const result = await http<QuestionDataFromServer>({\n    path: `/questions/${questionId}`,\n  });\n  if (result.ok && result.body) {\n    return mapQuestionFromServer(result.body);\n  } else {\n    return null;\n  }\n};\n\nexport const searchQuestions = async (\n  criteria: string,\n): Promise<QuestionData[]> => {\n  const result = await http<QuestionDataFromServer[]>({\n    path: `/questions?search=${criteria}`,\n  });\n  if (result.ok && result.body) {\n    return result.body.map(mapQuestionFromServer);\n  } else {\n    return [];\n  }\n};\n\nexport interface PostQuestionData {\n  title: string;\n  content: string;\n  userName: string;\n  created: Date;\n}\n\nexport const postQuestion = async (\n  question: PostQuestionData,\n): Promise<QuestionData | undefined> => {\n  const accessToken = await getAccessToken();\n  const result = await http<QuestionDataFromServer, PostQuestionData>({\n    path: '/questions',\n    method: 'post',\n    body: question,\n    accessToken,\n  });\n  if (result.ok && result.body) {\n    return mapQuestionFromServer(result.body);\n  } else {\n    return undefined;\n  }\n};\n\nexport interface PostAnswerData {\n  questionId: number;\n  content: string;\n  userName: string;\n  created: Date;\n}\n\nexport const postAnswer = async (\n  answer: PostAnswerData,\n): Promise<AnswerData | undefined> => {\n  const accessToken = await getAccessToken();\n  const result = await http<AnswerData, PostAnswerData>({\n    path: '/questions/answer',\n    method: 'post',\n    body: answer,\n    accessToken,\n  });\n  if (result.ok) {\n    return result.body;\n  } else {\n    return undefined;\n  }\n};\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport React from 'react';\ninterface Props {\n  children: React.ReactNode;\n}\nexport const PageTitle = ({ children }: Props) => (\n  <h2\n    css={css`\n      font-size: 15px;\n      font-weight: bold;\n      margin: 10px 0px 5px;\n      text-align: center;\n      text-transform: uppercase;\n    `}\n  >\n    {children}\n  </h2>\n);\n","export default __webpack_public_path__ + \"static/media/user.7152f995.svg\";","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport React from 'react';\nimport user from './user.svg';\n\nexport const UserIcon = () => (\n  <img\n    src={user}\n    alt=\"User\"\n    css={css`\n      width: 12px;\n      opacity: 0.6;\n    `}\n    width=\"12px\"\n  />\n);\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { fontFamily, fontSize, gray1, gray2, gray5 } from './Styles';\nimport { UserIcon } from './Icons';\nimport { Link, useSearchParams, useNavigate } from 'react-router-dom';\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useAuth0 } from '@auth0/auth0-react';\nconst buttonStyle = css`\n  font-family: ${fontFamily};\n  font-size: ${fontSize};\n  padding: 5px 10px;\n  background-color: transparent;\n  color: ${gray2};\n  text-decoration: none;\n  cursor: pointer;\n  :focus {\n    outline-color: ${gray5};\n  }\n  span {\n    margin-left: 7px;\n  }\n`;\n\ntype FormData = {\n  search: string;\n};\n\nexport const Header = () => {\n  const { isAuthenticated, user, isLoading } = useAuth0();\n  const navigate = useNavigate();\n  const { register, handleSubmit } = useForm<FormData>();\n  const [searchParams] = useSearchParams();\n  const criteria = searchParams.get('criteria') || '';\n\n  const submitForm = ({ search }: FormData) => {\n    navigate(`search?criteria=${search}`);\n  };\n  return (\n    <div\n      css={css`\n        position: fixed;\n        box-sizing: border-box;\n        top: 0;\n        width: 100%;\n        display: flex;\n        align-items: center;\n        justify-content: space-between;\n        padding: 10px 20px;\n        background-color: #fff;\n        border-bottom: 1px solid ${gray5};\n        box-shadow: 0 3px 7px 0 rgba(110, 112, 114, 0.21);\n      `}\n    >\n      <Link\n        to=\"/\"\n        css={css`\n          font-size: 24px;\n          font-weight: bold;\n          color: ${gray1};\n          text-decoration: none;\n        `}\n      >\n        Q & A\n        <span\n          css={css`\n            margin-left: 5px;\n            font-size: 14px;\n            font-weight: normal;\n          `}\n        >\n          {process.env.REACT_APP_ENV || 'dev'}\n        </span>\n      </Link>\n      <form onSubmit={handleSubmit(submitForm)}>\n        <input\n          {...register('search')}\n          name=\"search\"\n          type=\"text\"\n          placeholder=\"Search...\"\n          defaultValue={criteria}\n          css={css`\n            box-sizing: border-box;\n            font-family: ${fontFamily};\n            font-size: ${fontSize};\n            padding: 8px 10px;\n            border: 1px solid ${gray5};\n            border-radius: 3px;\n            color: ${gray2};\n            background-color: white;\n            width: 200px;\n            height: 30px;\n            :focus {\n              outline-color: ${gray5};\n            }\n          `}\n        />\n      </form>\n      <div>\n        {!isLoading &&\n          (isAuthenticated ? (\n            <div>\n              <span>{user!.name}</span>\n\n              <Link to=\"signout\" css={buttonStyle}>\n                <UserIcon />\n                <span>Sign Out</span>\n              </Link>\n            </div>\n          ) : (\n            <Link to=\"signin\" css={buttonStyle}>\n              <UserIcon />\n              <span>Sign In</span>\n            </Link>\n          ))}\n      </div>\n    </div>\n  );\n};\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { gray2, gray3 } from './Styles';\nimport React from 'react';\nimport { QuestionData } from './QuestionsData';\nimport { Link } from 'react-router-dom';\n\ninterface Props {\n  data: QuestionData;\n  showContent?: boolean;\n}\n\nexport const Question = ({ data, showContent }: Props) => (\n  <div\n    css={css`\n      padding: 10px 0px;\n      font-size: 19px;\n    `}\n  >\n    <div\n      css={css`\n        padding: 10px 0px;\n        font-size: 19px;\n      `}\n    >\n      <Link\n        css={css`\n          text-decoration: none;\n          color: ${gray2};\n        `}\n        to={`/questions/${data.questionId}`}\n      >\n        {data.title}\n      </Link>\n    </div>\n    {showContent && (\n      <div\n        css={css`\n          padding-bottom: 10px;\n          font-size: 15px;\n          color: ${gray2};\n        `}\n      >\n        {data.content.length > 50\n          ? `${data.content.substring(0, 50)}...`\n          : data.content}\n      </div>\n    )}\n    <div\n      css={css`\n        font-size: 12px;\n        font-style: italic;\n        color: ${gray3};\n      `}\n    >\n      {`Asked by ${data.userName} on\n          ${data.created.toLocaleDateString()} ${data.created.toLocaleTimeString()}`}\n    </div>\n  </div>\n);\nQuestion.defaultProps = {\n  showContent: true,\n};\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\n\nimport { accent2, gray5 } from './Styles';\nimport React from 'react';\nimport { QuestionData } from './QuestionsData';\nimport { Question } from './Question';\n\ninterface Props {\n  data?: QuestionData[];\n  renderItem?: (item: QuestionData) => JSX.Element;\n}\n\nexport const QuestionList = ({ data, renderItem }: Props) => (\n  <ul\n    css={css`\n      list-style: none;\n      margin: 10px 0 0 0;\n      padding: 0px 20px;\n      background-color: #fff;\n      border-bottom-left-radius: 4px;\n      border-bottom-right-radius: 4px;\n      border-top: 3px solid ${accent2};\n      box-shadow: 0 3px 5px 0 rgba(0, 0, 0, 0.16);\n    `}\n  >\n    {data?.map((question) => (\n      <li\n        key={question.questionId}\n        css={css`\n          border-top: 1px solid ${gray5};\n          :first-of-type {\n            border-top: none;\n          }\n        `}\n      >\n        {renderItem ? renderItem(question) : <Question data={question} />}\n      </li>\n    ))}\n  </ul>\n);\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport React from 'react';\nimport { QuestionList } from './QuestionList';\nimport { getUnansweredQuestions, QuestionData } from './QuestionsData';\nimport { Page } from './Page';\nimport { PageTitle } from './PageTitle';\nimport { PrimaryButton } from './Styles';\nimport { useNavigate } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  gettingUnansweredQuestionsAction,\n  gotUnansweredQuestionsAction,\n  AppState,\n} from './Store';\n//import { useAuth } from './Auth';\nimport { useAuth0 } from '@auth0/auth0-react';\n\nexport const HomePage = () => {\n  const [questions, setQuestions] = React.useState<QuestionData[]>([]);\n  const [questionsLoading, setQuestionsLoading] = React.useState(true);\n\n  const { isAuthenticated } = useAuth0();\n  React.useEffect(() => {\n    let cancelled = false;\n    const doGetUnansweredQuestions = async () => {\n      const unansweredQuestions = await getUnansweredQuestions();\n      if (!cancelled) {\n        setQuestions(unansweredQuestions);\n        setQuestionsLoading(false);\n      }\n    };\n    doGetUnansweredQuestions();\n    return () => {\n      cancelled = true;\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  const navigate = useNavigate();\n  const handleAskQuestionClick = () => {\n    navigate('ask');\n  };\n\n  return (\n    <Page>\n      <div\n        css={css`\n          display: flex;\n          align-items: center;\n          justify-content: space-between;\n        `}\n      >\n        <PageTitle>Unanswered Questions</PageTitle>\n        {isAuthenticated && (\n          <PrimaryButton onClick={handleAskQuestionClick}>\n            Ask a question\n          </PrimaryButton>\n        )}\n      </div>\n      {questionsLoading ? (\n        <div>Loading...</div>\n      ) : (\n        <QuestionList data={questions} />\n      )}\n    </Page>\n  );\n};\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport { useSearchParams } from 'react-router-dom';\nimport { QuestionList } from './QuestionList';\nimport { QuestionData, searchQuestions } from './QuestionsData';\n\nimport React from 'react';\nimport { Page } from './Page';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport {\n  AppState,\n  searchingQuestionsAction,\n  searchedQuestionsAction,\n} from './Store';\n\nexport const SearchPage = () => {\n  const [searchParams] = useSearchParams();\n  const [questions, setQuestions] = React.useState<QuestionData[]>([]);\n\n  const search = searchParams.get('criteria') || '';\n\n  React.useEffect(() => {\n    let cancelled = false;\n    const doSearch = async (criteria: string) => {\n      const foundResults = await searchQuestions(criteria);\n      if (!cancelled) {\n        setQuestions(foundResults);\n      }\n    };\n    doSearch(search);\n    return () => {\n      cancelled = true;\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [search]);\n\n  return (\n    <Page title=\"Search Results\">\n      {search && (\n        <p\n          css={css`\n            font-size: 16px;\n            font-style: italic;\n            margin-top: 0px;\n          `}\n        >\n          for \"{search}\"\n        </p>\n      )}\n      <QuestionList data={questions} />\n    </Page>\n  );\n};\n","import React from 'react';\nimport { Page } from './Page';\nimport { StatusText } from './Styles';\nimport { useAuth0 } from '@auth0/auth0-react';\n\ntype SigninAction = 'signin' | 'signin-callback';\n\ninterface Props {\n  action: SigninAction;\n}\n\nexport const SignInPage = ({ action }: Props) => {\n  const { loginWithRedirect } = useAuth0(); // Use loginWithRedirect from the useAuth0 hook\n\n  if (action === 'signin') {\n    loginWithRedirect(); // Use loginWithRedirect method to initiate sign-in\n  }\n\n  return (\n    <Page title=\"Sign In\">\n      <StatusText>Signing in ...</StatusText>\n    </Page>\n  );\n};\n","import React from 'react';\nimport { Page } from './Page';\nexport const NotFoundPage = () => <Page title=\"Page Not Found\">{null}</Page>;\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport React from 'react';\nimport { AnswerData } from './QuestionsData';\nimport { gray3 } from './Styles';\n\ninterface Props {\n  data: AnswerData;\n}\n\nexport const Answer = ({ data }: Props) => (\n  <div\n    css={css`\n      padding: 10px 0px;\n    `}\n  >\n    <div\n      css={css`\n        padding: 10px 0px;\n        font-size: 13px;\n      `}\n    >\n      {data.content}\n    </div>\n    <div\n      css={css`\n        font-size: 12px;\n        font-style: italic;\n        color: ${gray3};\n      `}\n    >\n      {`Answered by ${data.userName} on\n        ${data.created.toLocaleDateString()} \n        ${data.created.toLocaleTimeString()}`}\n    </div>\n  </div>\n);\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport React from 'react';\nimport { AnswerData } from './QuestionsData';\nimport { Answer } from './Answer';\nimport { gray5 } from './Styles';\n\ninterface Props {\n  data: AnswerData[];\n}\n\nexport const AnswerList = ({ data }: Props) => (\n  <ul\n    css={css`\n      list-style: none;\n      margin: 10px 0 0 0;\n      padding: 0;\n    `}\n  >\n    {data.map((answer) => (\n      <li\n        css={css`\n          border-top: 1px solid ${gray5};\n        `}\n        key={answer.answerId}\n      >\n        <Answer data={answer} />\n      </li>\n    ))}\n  </ul>\n);\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\nimport {\n  gray3,\n  gray6,\n  Fieldset,\n  FieldContainer,\n  FieldLabel,\n  FieldTextArea,\n  FormButtonContainer,\n  PrimaryButton,\n  FieldError,\n  SubmissionSuccess,\n} from './Styles';\n\nimport React from 'react';\nimport { Page } from './Page';\nimport { useParams } from 'react-router-dom';\nimport { getQuestion, postAnswer, QuestionData } from './QuestionsData';\nimport { AnswerList } from './AnswerList';\n\nimport { useForm } from 'react-hook-form';\n\nimport { useSelector, useDispatch } from 'react-redux';\nimport { AppState, gettingQuestionAction, gotQuestionAction } from './Store';\n//import { useAuth } from './Auth';\nimport { useAuth0 } from '@auth0/auth0-react';\n\ntype FormData = {\n  content: string;\n};\n\nexport const QuestionPage = () => {\n  const [successfullySubmitted, setSuccessfullySubmitted] =\n    React.useState(false);\n\n  const [question, setQuestion] = React.useState<QuestionData | null>(null);\n\n  const { questionId } = useParams();\n\n  React.useEffect(() => {\n    let cancelled = false;\n    const doGetQuestion = async (questionId: number) => {\n      const foundQuestion = await getQuestion(questionId);\n      if (!cancelled) {\n        setQuestion(foundQuestion);\n      }\n    };\n    if (questionId) {\n      doGetQuestion(Number(questionId));\n    }\n    return () => {\n      cancelled = true;\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [questionId]);\n\n  const {\n    register,\n    formState: { errors },\n    handleSubmit,\n    formState,\n  } = useForm<FormData>({\n    mode: 'onBlur',\n  });\n\n  const submitForm = async (data: FormData) => {\n    const result = await postAnswer({\n      questionId: question!.questionId,\n      content: data.content,\n      userName: 'Fred',\n      created: new Date(),\n    });\n    setSuccessfullySubmitted(result ? true : false);\n  };\n  const { isAuthenticated } = useAuth0();\n  return (\n    <Page>\n      <div\n        css={css`\n          background-color: white;\n          padding: 15px 20px 20px 20px;\n          border-radius: 4px;\n          border: 1px solid ${gray6};\n          box-shadow: 0 3px 5px 0 rgba(0, 0, 0, 0.16);\n        `}\n      >\n        <div\n          css={css`\n            font-size: 19px;\n            font-weight: bold;\n            margin: 10px 0px 5px;\n          `}\n        >\n          {question === null ? '' : question.title}\n        </div>\n        {question !== null && (\n          <React.Fragment>\n            <p\n              css={css`\n                margin-top: 0px;\n                background-color: white;\n              `}\n            >\n              {question.content}\n            </p>\n            <div\n              css={css`\n                font-size: 12px;\n                font-style: italic;\n                color: ${gray3};\n              `}\n            >\n              {`Asked by ${question.userName} on\n  ${question.created.toLocaleDateString()} \n  ${question.created.toLocaleTimeString()}`}\n            </div>\n            <AnswerList data={question.answers} />\n            {isAuthenticated && (\n              <form\n                onSubmit={handleSubmit(submitForm)}\n                css={css`\n                  margin-top: 20px;\n                `}\n              >\n                <Fieldset\n                  disabled={formState.isSubmitting || successfullySubmitted}\n                >\n                  <FieldContainer>\n                    <FieldLabel htmlFor=\"content\">Your Answer</FieldLabel>\n                    <FieldTextArea\n                      {...register('content', {\n                        required: true,\n                        minLength: 50,\n                      })}\n                      id=\"content\"\n                      name=\"content\"\n                    />\n                    {errors.content && errors.content.type === 'required' && (\n                      <FieldError>You must enter the answer</FieldError>\n                    )}\n                    {errors.content && errors.content.type === 'minLength' && (\n                      <FieldError>\n                        The answer must be at least 50 characters\n                      </FieldError>\n                    )}\n                  </FieldContainer>\n                  <FormButtonContainer>\n                    <PrimaryButton type=\"submit\">\n                      Submit Your Answer\n                    </PrimaryButton>\n                  </FormButtonContainer>\n                  {successfullySubmitted && (\n                    <SubmissionSuccess>\n                      Your answer was successfully submitted\n                    </SubmissionSuccess>\n                  )}\n                </Fieldset>\n              </form>\n            )}\n          </React.Fragment>\n        )}\n      </div>\n    </Page>\n  );\n};\n","import { QuestionData } from './QuestionsData';\nimport { Store, createStore, combineReducers } from 'redux';\n\ninterface QuestionsState {\n  readonly loading: boolean;\n  readonly unanswered: QuestionData[];\n  readonly viewing: QuestionData | null;\n  readonly searched: QuestionData[];\n}\nexport interface AppState {\n  readonly questions: QuestionsState;\n}\n\nconst initialQuestionState: QuestionsState = {\n  loading: false,\n  unanswered: [],\n  viewing: null,\n  searched: [],\n};\n\nexport const GETTINGUNANSWEREDQUESTIONS = 'GettingUnansweredQuestions';\n\nexport const gettingUnansweredQuestionsAction = () =>\n  ({\n    type: GETTINGUNANSWEREDQUESTIONS,\n  } as const);\n\nexport const GOTUNANSWEREDQUESTIONS = 'GotUnansweredQuestions';\nexport const gotUnansweredQuestionsAction = (questions: QuestionData[]) =>\n  ({\n    type: GOTUNANSWEREDQUESTIONS,\n    questions: questions,\n  } as const);\n\nexport const GETTINGQUESTION = 'GettingQuestion';\nexport const gettingQuestionAction = () =>\n  ({\n    type: GETTINGQUESTION,\n  } as const);\n\nexport const GOTQUESTION = 'GotQuestion';\nexport const gotQuestionAction = (question: QuestionData | null) =>\n  ({\n    type: GOTQUESTION,\n    question: question,\n  } as const);\n\nexport const SEARCHINGQUESTIONS = 'SearchingQuestions';\nexport const searchingQuestionsAction = () =>\n  ({\n    type: SEARCHINGQUESTIONS,\n  } as const);\n\nexport const SEARCHEDQUESTIONS = 'SearchedQuestions';\nexport const searchedQuestionsAction = (questions: QuestionData[]) =>\n  ({\n    type: SEARCHEDQUESTIONS,\n    questions,\n  } as const);\n\ntype QuestionsActions =\n  | ReturnType<typeof gettingUnansweredQuestionsAction>\n  | ReturnType<typeof gotUnansweredQuestionsAction>\n  | ReturnType<typeof gettingQuestionAction>\n  | ReturnType<typeof gotQuestionAction>\n  | ReturnType<typeof searchingQuestionsAction>\n  | ReturnType<typeof searchedQuestionsAction>;\n\nconst questionsReducer = (\n  state = initialQuestionState,\n  action: QuestionsActions,\n) => {\n  switch (action.type) {\n    case GETTINGUNANSWEREDQUESTIONS: {\n      return {\n        ...state,\n        loading: true,\n      };\n    }\n    case GOTUNANSWEREDQUESTIONS: {\n      return {\n        ...state,\n        unanswered: action.questions,\n        loading: false,\n      };\n    }\n    case GETTINGQUESTION: {\n      return {\n        ...state,\n        viewing: null,\n        loading: true,\n      };\n    }\n    case GOTQUESTION: {\n      return {\n        ...state,\n        viewing: action.question,\n        loading: false,\n      };\n    }\n    case SEARCHINGQUESTIONS: {\n      return {\n        ...state,\n        searched: [],\n        loading: true,\n      };\n    }\n    case SEARCHEDQUESTIONS: {\n      return {\n        ...state,\n        searched: action.questions,\n        loading: false,\n      };\n    }\n  }\n\n  return state;\n};\n\nconst rootReducer = combineReducers<AppState>({\n  questions: questionsReducer,\n});\n\nexport function configureStore(): Store<AppState> {\n  const store = createStore(rootReducer, undefined);\n  return store;\n}\n","import React from 'react';\nimport { Page } from './Page';\nimport { StatusText } from './Styles';\nimport { useAuth0 } from '@auth0/auth0-react';\n\ntype SignoutAction = 'signout' | 'signout-callback';\n\ninterface Props {\n  action: SignoutAction;\n}\n\nexport const SignOutPage = ({ action }: Props) => {\n  const { logout } = useAuth0(); // Use logout from the useAuth0 hook\n\n  let message = 'Signing out ...';\n\n  switch (action) {\n    case 'signout':\n      logout(); // Use logout method to initiate sign-out\n      break;\n    case 'signout-callback':\n      message = 'You successfully signed out!';\n      break;\n    default:\n      break;\n  }\n\n  return (\n    <Page title=\"Sign out\">\n      <StatusText>{message}</StatusText>\n    </Page>\n  );\n};\n","import React, { ReactNode } from 'react'; // Import ReactNode type\nimport { Page } from './Page';\n//import { useAuth } from './Auth';\nimport { useAuth0 } from '@auth0/auth0-react';\n\nconst AuthorizedPage: React.FC<{ children: ReactNode }> = ({ children }) => {\n  const { isAuthenticated } = useAuth0();\n  if (isAuthenticated) {\n    return <>{children}</>;\n  } else {\n    return <Page title=\"You do not have access to this page\">{null}</Page>;\n  }\n};\n\nexport default AuthorizedPage;\n","/** @jsxImportSource @emotion/react */\nimport { css } from '@emotion/react';\n\nimport { Header } from './Header';\nimport { HomePage } from './HomePage';\n\nimport { fontFamily, fontSize, gray2 } from './Styles';\n\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\n\nimport { SearchPage } from './SearchPage';\nimport { SignInPage } from './SignInPage';\nimport { NotFoundPage } from './NotFoundPage';\nimport { QuestionPage } from './QuestionPage';\n\nimport React from 'react';\nimport { Provider } from 'react-redux';\nimport { configureStore } from './Store';\nimport { SignOutPage } from './SignOutPage';\n//import { AuthProvider } from './Auth';\nimport { Auth0Provider } from '@auth0/auth0-react';\nimport AuthorizedPage from './AuthorizedPage';\n\nconst AskPage = React.lazy(() => import('./AskPage'));\n\nconst store = configureStore();\nfunction App() {\n  return (\n    <Provider store={store}>\n      <Auth0Provider\n        domain={'dev-mgx2m336d2n3g45f.us.auth0.com'}\n        clientId={'xD9Y1eGs4A52gZnVGsik2ZHUkawycoO6'}\n        authorizationParams={{\n          redirect_uri: window.location.origin,\n        }}\n      >\n        <BrowserRouter>\n          <div\n            css={css`\n              font-family: ${fontFamily};\n              font-size: ${fontSize};\n              color: ${gray2};\n            `}\n          >\n            <Header />\n            <Routes>\n              <Route path=\"\" element={<HomePage />} />\n              <Route path=\"search\" element={<SearchPage />} />\n              <Route\n                path=\"ask\"\n                element={\n                  <React.Suspense\n                    fallback={\n                      <div\n                        css={css`\n                          margin-top: 100px;\n                          text-align: center;\n                        `}\n                      >\n                        Loading...\n                      </div>\n                    }\n                  >\n                    <AuthorizedPage>\n                      <AskPage />\n                    </AuthorizedPage>\n                  </React.Suspense>\n                }\n              />\n              <Route path=\"signin\" element={<SignInPage action=\"signin\" />} />\n              <Route\n                path=\"/signin-callback\"\n                element={<SignInPage action=\"signin-callback\" />}\n              />\n              <Route\n                path=\"signout\"\n                element={<SignOutPage action=\"signout\" />}\n              />\n              <Route\n                path=\"/signout-callback\"\n                element={<SignOutPage action=\"signout-callback\" />}\n              />\n              <Route path=\"questions/:questionId\" element={<QuestionPage />} />\n              <Route path=\"*\" element={<NotFoundPage />} />\n            </Routes>\n          </div>\n        </BrowserRouter>\n      </Auth0Provider>\n    </Provider>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement,\n);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import styled from '@emotion/styled';\nimport { css } from '@emotion/react';\nexport const gray1 = '#383737';\nexport const gray2 = '#5c5a5a';\nexport const gray3 = '#857c81';\nexport const gray4 = '#b9b9b9';\nexport const gray5 = '#e3e2e2';\nexport const gray6 = '#f7f8fa';\nexport const primary1 = '#681c41';\nexport const primary2 = '#824c67';\nexport const accent1 = '#dbb365';\nexport const accent2 = '#efd197';\nexport const fontFamily = \"'Segoe UI', 'HelveticaNeue',sans-serif\";\nexport const fontSize = '16px';\nexport const PrimaryButton = styled.button`\n  background-color: ${primary2};\n  border-color: ${primary2};\n  border-style: solid;\n  border-radius: 5px;\n  font-family: ${fontFamily};\n  font-size: ${fontSize};\n  padding: 5px 10px;\n  color: white;\n  cursor: pointer;\n  :hover {\n    background-color: ${primary1};\n  }\n  :focus {\n    outline-color: ${primary2};\n  }\n  :disabled {\n    opacity: 0.5;\n    cursor: not-allowed;\n  }\n`;\nexport const Fieldset = styled.fieldset`\n  margin: 10px auto 0 auto;\n  padding: 30px;\n  width: 350px;\n  background-color: ${gray6};\n  border-radius: 4px;\n  border: 1px solid ${gray5};\n  box-shadow: 0 3px 5px 0 rgba(0, 0, 0, 0.16);\n`;\nexport const FieldContainer = styled.div`\n  margin-bottom: 10px;\n`;\nexport const FieldLabel = styled.label`\n  font-weight: bold;\n`;\nconst baseFieldCSS = css`\n  box-sizing: border-box;\n  font-family: ${fontFamily};\n  font-size: ${fontSize};\n  margin-bottom: 5px;\n  padding: 8px 10px;\n  border: 1px solid ${gray5};\n  border-radius: 3px;\n  color: ${gray2};\n  background-color: white;\n  width: 100%;\n  :focus {\n    outline-color: ${gray5};\n  }\n  :disabled {\n    background-color: ${gray6};\n  }\n`;\nexport const FieldInput = styled.input`\n  ${baseFieldCSS}\n`;\nexport const FieldTextArea = styled.textarea`\n  ${baseFieldCSS}\n  height: 100px;\n`;\nexport const FieldError = styled.div`\n  font-size: 12px;\n  color: red;\n`;\nexport const FormButtonContainer = styled.div`\n  margin: 30px 0px 0px 0px;\n  padding: 20px 0px 0px 0px;\n  border-top: 1px solid ${gray5};\n`;\nexport const SubmissionSuccess = styled.div`\n  margin-top: 10px;\n  color: green;\n`;\nexport const SubmissionFailure = styled.div`\n  margin-top: 10px;\n  color: red;\n`;\nexport const StatusText = styled.div`\n  text-align: center;\n`;\n"],"sourceRoot":""}